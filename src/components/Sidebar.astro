---
const sidebar = [
  {
    section: "🚀 Introduction",
    items: [
      { title: "🎯 Goal", path: "/docs/goal" },
      { title: "📖 Key Concepts", path: "/docs/key-concepts" },
      { title: "💡 Scenarios", path: "/docs/scenarios" },
    ],
  },
  {
    section: "🤖 Mikasa Agent",
    items: [
      { title: "📄 Overview", path: "/docs/mikasa-agent/overview" },
      { title: "📥 Getting Started", path: "/docs/mikasa-agent/getting-started" },
      { title: "🏗️ Architecture", path: "/docs/mikasa-agent/architecture" },
      { title: "📂 Project Structure", path: "/docs/mikasa-agent/project-structure" },
      { title: "🔧 Setup", path: "/docs/mikasa-agent/setup" },
      { title: "💻 Development Environment", path: "/docs/mikasa-agent/dev-environment" },
      { title: "▶️ Run Demo", path: "/docs/mikasa-agent/run-demo" },
      { title: "🎮 Run Playground", path: "/docs/mikasa-agent/run-playground" },
      { title: "🛠️ Customize Mikasa Agent", path: "/docs/mikasa-agent/customize" },
    ],
  },
  {
    section: "⚙️ Framework",
    items: [
      { title: "🔍 Overview", path: "/docs/framework/overview" },
      { title: "🛠️ Development Process", path: "/docs/framework/development-process" },
      { title: "🐞 Debugging", path: "/docs/framework/debugging" },
      { title: "📊 Profiling", path: "/docs/framework/profiling" },
      { title: "📦 Dependencies", path: "/docs/framework/dependencies" },
      { title: "✅ Testing System", path: "/docs/framework/testing" },
    ],
  },
  {
    section: "📚 Development Process",
    items: [
      { title: "📝 Preparation", path: "/docs/dev-process/preparation" },
      { title: "➕ Addon System", path: "/docs/dev-process/addon-system" },
      { title: "🌀 Version System", path: "/docs/dev-process/version-system" },
      { title: "🗂️ Metadata System", path: "/docs/dev-process/metadata-system" },
      { title: "📨 Message System", path: "/docs/dev-process/message-system" },
      { title: "📐 Type System", path: "/docs/dev-process/type-system" },
      { title: "📜 Schema System", path: "/docs/dev-process/schema-system" },
      { title: "🔨 Build System", path: "/docs/dev-process/build-system" },
      { title: "📈 Graph", path: "/docs/dev-process/graph" },
      { title: "☁️ Cloud Store", path: "/docs/dev-process/cloud-store" },
    ],
  },
  {
    section: "🧑‍🏫 User Guides",
    items: [
      { title: "👥 For Framework Users", path: "/docs/guides/framework-users" },
      { title: "👨‍💻 For TEN Developers", path: "/docs/guides/ten-developers" },
    ],
  },
  {
    section: "📘 API Reference",
    items: [
      { title: "📌 Required Interface", path: "/docs/api/required-interface" },
      { title: "🪵 Log", path: "/docs/api/log" },
    ],
  },
  {
    section: "📦 Packages",
    items: [
      { title: "🔍 Overview", path: "/docs/packages/overview" },
      { title: "📱 App Extension", path: "/docs/packages/app-extension" },
      { title: "🐍 Python Async Extension", path: "/docs/packages/python-async" },
    ],
  },
  {
    section: "🛠️ Manager",
    items: [
      { title: "🔍 Overview", path: "/docs/manager/overview" },
      { title: "🎨 Designer", path: "/docs/manager/designer" },
      { title: "🧩 Check-Graph", path: "/docs/manager/check-graph" },
    ],
  },
  {
    section: "📖 Tutorials",
    items: [
      { title: "🤖 Local AI Model in Python", path: "/docs/tutorials/local-ai-model" },
    ],
  },
  {
    section: "❓ Other",
    items: [{ title: "❔ FAQs", path: "/docs/faqs" }],
  },
];
---

<aside id="sidebar" class="fixed top-0 left-0 w-64 h-full bg-gray-100 border-r border-gray-200 shadow-lg z-40 transform -translate-x-full sm:translate-x-0 transition-transform duration-300">
  <div class="p-4">
    <h2 class="text-lg font-semibold text-gray-800">Menu</h2>
  </div>
  <nav class="px-4 space-y-6">
    {sidebar.map((section) => (
      <div>
        <h5 class="text-sm font-medium text-gray-600 uppercase">{section.section}</h5>
        <ul class="mt-3 space-y-2">
          {section.items.map((item) => (
            <li>
              <a href={item.path} class="block text-sm text-gray-700 hover:text-gray-900 hover:underline">
                {item.title}
              </a>
            </li>
          ))}
        </ul>
      </div>
    ))}
  </nav>
</aside>

<script>
  document.getElementById("menu-toggle").addEventListener("click", () => {
    const menuContent = document.getElementById("menu-content");
    menuContent.classList.toggle("hidden");
  });
</script>
